# Generated by Django 5.2.3 on 2025-07-05 19:20

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Inventory', '0003_alter_product_category_delete_category'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(help_text='Unique identifier for the product', max_length=50, unique=True)),
                ('product_name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Aggregates and Composites', 'Aggregates and Composites'), ('Masonry', 'Masonry'), ('Metals', 'Metals'), ('Wood and Wood Products', 'Wood and Wood Products'), ('Plastics and Polymers', 'Plastics and Polymers'), ('Glass and Finishing Materials', 'Glass and Finishing Materials')], max_length=100)),
                ('quantity_in_stock', models.PositiveIntegerField(default=0, help_text='Current quantity available in warehouse', validators=[django.core.validators.MinValueValidator(0)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Cost price per unit from supplier', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('minimum_stock_level', models.PositiveIntegerField(default=10, help_text='Minimum quantity that should be maintained in warehouse')),
                ('maximum_stock_level', models.PositiveIntegerField(default=1000, help_text='Maximum quantity that can be stored in warehouse')),
                ('reorder_point', models.PositiveIntegerField(default=20, help_text='Stock level at which reorder should be triggered')),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=100, unique=True)),
                ('barcode', models.CharField(blank=True, help_text='Product barcode', max_length=100)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight per unit in kg', max_digits=8, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='Product dimensions (L x W x H)', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether product is currently available')),
                ('is_discontinued', models.BooleanField(default=False, help_text='Whether product is discontinued')),
                ('warehouse_location', models.CharField(blank=True, help_text='Physical location in warehouse (e.g., Aisle A, Shelf 3)', max_length=50)),
                ('supplier', models.ForeignKey(help_text='Primary supplier for this product', on_delete=django.db.models.deletion.PROTECT, related_name='warehouse_products', to='Inventory.supplier')),
            ],
            options={
                'ordering': ['product_name', 'category'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseStockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('receipt', 'Stock Receipt'), ('shipment', 'Stock Shipment'), ('adjustment', 'Stock Adjustment'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('return', 'Return'), ('damage', 'Damage/Loss')], max_length=20)),
                ('quantity_change', models.IntegerField(help_text='Positive for additions, negative for reductions')),
                ('previous_stock_level', models.PositiveIntegerField(default=0)),
                ('new_stock_level', models.PositiveIntegerField(default=0)),
                ('reference_number', models.CharField(blank=True, help_text='PO number, invoice number, etc.', max_length=100)),
                ('reason', models.TextField(help_text='Reason for stock movement')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('warehouse_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='Inventory.warehouseproduct')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.AddIndex(
            model_name='warehouseproduct',
            index=models.Index(fields=['product_id'], name='Inventory_w_product_bcbdca_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouseproduct',
            index=models.Index(fields=['sku'], name='Inventory_w_sku_3176d1_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouseproduct',
            index=models.Index(fields=['category'], name='Inventory_w_categor_03afb4_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouseproduct',
            index=models.Index(fields=['supplier'], name='Inventory_w_supplie_e7347e_idx'),
        ),
        migrations.AddIndex(
            model_name='warehouseproduct',
            index=models.Index(fields=['is_active'], name='Inventory_w_is_acti_246b4d_idx'),
        ),
        migrations.AddIndex(
            model_name='warehousestockmovement',
            index=models.Index(fields=['warehouse_product', '-created_date'], name='Inventory_w_warehou_80963f_idx'),
        ),
        migrations.AddIndex(
            model_name='warehousestockmovement',
            index=models.Index(fields=['movement_type'], name='Inventory_w_movemen_b0a603_idx'),
        ),
        migrations.AddIndex(
            model_name='warehousestockmovement',
            index=models.Index(fields=['created_date'], name='Inventory_w_created_08ee4c_idx'),
        ),
    ]
